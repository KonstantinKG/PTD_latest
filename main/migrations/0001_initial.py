# Generated by Django 4.0.5 on 2022-06-29 09:04

from django.db import migrations, models
import django.db.models.deletion
import main.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Clan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=124, unique=True, verbose_name='Название клана')),
            ],
        ),
        migrations.CreateModel(
            name='Limit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Обычный', max_length=32, unique=True, verbose_name='Название лимита')),
                ('invitations', models.PositiveSmallIntegerField(default=15, verbose_name='Лимит на кол-во приглашений в команду')),
                ('tournaments', models.PositiveSmallIntegerField(default=6, verbose_name='Лимит на кол-во участий в турнирах')),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='Название должности')),
                ('color', models.CharField(default='#C5C5C5', max_length=7, verbose_name='Цвет')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('nickname', models.CharField(max_length=32, unique=True, verbose_name='Никнейм')),
                ('name', models.CharField(blank=True, max_length=32, verbose_name='Имя')),
                ('about', models.TextField(blank=True, verbose_name='О себе')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('telephone', models.CharField(blank=True, max_length=30, verbose_name='Телефон')),
                ('uid', models.CharField(max_length=19, unique=True, verbose_name='UID')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photos/%Y/%m/%d/', verbose_name='Фото')),
                ('remember_me', models.BooleanField(default=False)),
                ('user_ip', models.CharField(blank=True, max_length=100, verbose_name='IP пользователя')),
                ('last_online', models.DateTimeField(blank=True, null=True, verbose_name='Последний раз в онлайне')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Дата присоединения')),
                ('instagram', models.URLField(blank=True, verbose_name='Инстаграм')),
                ('telegram', models.URLField(blank=True, verbose_name='Телеграм')),
                ('vkontakte', models.URLField(blank=True, verbose_name='Вконтакте')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False, verbose_name='Доступ как сотрудник')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Является админом')),
                ('clan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.clan')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('limit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='main.limit')),
                ('position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.position')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователи',
                'verbose_name_plural': 'Пользователи',
                'unique_together': {('email', 'uid')},
            },
            managers=[
                ('objects', main.managers.UserManager()),
            ],
        ),
    ]
